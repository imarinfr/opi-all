<diagram program="umletino" version="15.0.0"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>270</x><y>410</y><w>420</w><h>380</h></coordinates><panel_attributes>core::OpiMachine
--
- public static MACHINES :String[] = {
    "Compass", "Maia", "O900", 
     "ImoVifa", "Display", "PhoneHMD", "PicoVR"}

protected HashMap&lt;String, MethodData&gt; opiMethods
protected HashMap&lt;String, List&lt;String&gt;&gt; enums
protected CSWriter
--
+{Settings}
+{MethodData}
--
OpiMachine()

public static readSettingsFile()
public static writeSettingsFile()
public fillSettings()
MessageProcessor.Packet process(HashMap&lt;String, Object&gt;) 

#abstract Settings getSettings()
#abstract MessageProcessor.Packet initialize(HashMap&lt;String, Object&gt;)
#abstract MessageProcessor.Packet query()
#abstract MessageProcessor.Packet setup(HashMap&lt;String, Object&gt;)
#abstract MessageProcessor.Packet present(HashMap&lt;String, Object&gt;)
#abstract MessageProcessor.Packet close()

protected String toJson(Command command)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>930</x><y>380</y><w>360</w><h>290</h></coordinates><panel_attributes>core::OpiManager
--
- public class enum Command {
    CHOOSE, QUERY, SETUP, INITIALIZE, PRESENT, CLOSE}

-private static Gson gson
-private OpiMachine machine

--

--
public OpiManager()

public static MessageProcessor.Packet ok(String)
public static MessageProcessor.Packet ok(String, boolean)
public static MessageProcessor.Packet error(String)
public static MessageProcessor.Packet error(String, Exception)

public MessageProcessor.Packet process(String)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1120</x><y>280</y><w>30</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>970</x><y>180</y><w>300</w><h>110</h></coordinates><panel_attributes>core::definitions::MessageProcessor
--

--
+{Packet}
--

#abstract public Packet process(String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>680</x><y>410</y><w>260</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;240;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>290</x><y>850</y><w>370</w><h>260</h></coordinates><panel_attributes>core::Jovp
--
settings: Settings
--
+{Settings} extends OpiMachine.Settings
--
Jovp(Scene)
Jovp(boolean)

Settings getSettings()
MessageProcessor.Packet initialize(HashMap&lt;String, Object&gt;)
MessageProcessor.Packet query()
MessageProcessor.Packet setup(HashMap&lt;String, Object&gt;)
MessageProcessor.Packet present(HashMap&lt;String, Object&gt;)
MessageProcessor.Packet close()

--

FXML!????
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>460</x><y>780</y><w>30</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>190</x><y>1160</y><w>160</w><h>100</h></coordinates><panel_attributes>core::ImoVifa
--
ImoVifa(Scene)
ImoVifa(boolean)
--

FXML!????
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>250</x><y>1100</y><w>90</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>70;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>390</x><y>1160</y><w>160</w><h>100</h></coordinates><panel_attributes>core::PicoVR
--
PicoVR(Scene)
PicoVR(boolean)
--

FXML!????
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>430</x><y>1100</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>570</x><y>1160</y><w>160</w><h>100</h></coordinates><panel_attributes>core::Display
--
Display(Scene)
Display(boolean)
--

FXML!????
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>620</x><y>1100</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>1160</y><w>160</w><h>100</h></coordinates><panel_attributes>core::PhoneHMD
--
PhoneHMD(Scene)
PhoneHMD(boolean)
--

FXML!????
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>0</x><y>1050</y><w>310</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>290;10;10;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>700</x><y>850</y><w>370</w><h>260</h></coordinates><panel_attributes>core::ICare
--
settings: Settings
--
+{Settings} extends OpiMachine.Settings
--
Icare(Scene)
Icare(boolean)

Settings getSettings()
MessageProcessor.Packet initialize(HashMap&lt;String, Object&gt;)
MessageProcessor.Packet query()
MessageProcessor.Packet setup(HashMap&lt;String, Object&gt;)
MessageProcessor.Packet present(HashMap&lt;String, Object&gt;)
MessageProcessor.Packet close()

--

FXML!????
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>950</x><y>1160</y><w>160</w><h>100</h></coordinates><panel_attributes>core::Compass
--
Compass(Scene)
Compass(boolean)
--

FXML!????
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>770</x><y>1160</y><w>160</w><h>100</h></coordinates><panel_attributes>core::Maia
--
Maia(Scene)
Maia(boolean)
--

FXML!????
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>880</x><y>1100</y><w>170</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;150;60</additional_attributes></element><element><id>Relation</id><coordinates><x>630</x><y>780</y><w>230</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;210;70</additional_attributes></element><element><id>Relation</id><coordinates><x>820</x><y>1100</y><w>50</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;30;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>880</y><w>160</w><h>100</h></coordinates><panel_attributes>core::O900
--
STUFF
--

FXML!????
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>160</x><y>780</y><w>140</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>120;10;10;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>440</x><y>80</y><w>340</w><h>280</h></coordinates><panel_attributes>core::CSListener extends Thread
--
  BufferedReader incoming;
  BufferedWriter outgoing;
  Writer sendWriter = null;
  Writer receiveWriter = null;
  private MessageProcessor msgProcessor;
  private boolean listen = true;
--
  public CSListener(int, MessageProcessor)
  public CSListener(int, MessageProcessor, Writer, Writer)
  public void run()
  public boolean empty()
  public String receive()
  public void send(String) 
  public void close() 
  public String toString()
  public InetAddress getAddress()
  public String getIP() 
  public int getPort()</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>770</x><y>160</y><w>220</w><h>50</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>200;30;10;10</additional_attributes></element></diagram>